// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id             Int      @id @default(autoincrement())
  nama_produk    String?
  referensi      String?
  kategori       String?
  harga_produk   Int?
  biaya_produksi Int?
  stok           Int?
  gambar_produk  String?
  created_at     DateTime @default(now())
  updated_at     DateTime @default(now())
  BoM            BoM[]
  order          order[]
}

model Bahan {
  id           Int      @id @default(autoincrement())
  nama_bahan   String?
  biaya_bahan  Int?
  harga_bahan  Int?
  stok         Int?
  gambar_bahan String?
  created_at   DateTime @default(now())
  updated_at   DateTime @default(now())
  BoM          BoM[]
  rfq          rfq[]
}

model BoM {
  id                 Int      @id @default(autoincrement())
  id_produk          Int
  id_bahan           Int
  referensi          String?
  jumlah_produk      Int?
  jumlah_bahan       Int?
  total_biaya_produk Int?
  total_biaya_bahan  Int?
  Product            Product? @relation(fields: [id_produk], references: [id])
  Bahan              Bahan?   @relation(fields: [id_bahan], references: [id])
  created_at         DateTime @default(now())
  updated_at         DateTime @default(now())
}

model order {
  id            Int      @id @default(autoincrement())
  id_produk     Int
  referensi     String?
  referensi_bom String?
  jumlah_order  Int?
  status        String?
  Product       Product? @relation(fields: [id_produk], references: [id])
  created_at    DateTime @default(now())
  updated_at    DateTime @default(now())
}

model vendor {
  id                 Int      @id @default(autoincrement())
  company_registrasi String?
  nama_vendor        String?
  type               String?
  alamat             String?
  no_telp            String?
  email              String?
  created_at         DateTime @default(now())
  updated_at         DateTime @default(now())
  rfq                rfq[]
}

model rfq {
  id             Int       @id @default(autoincrement())
  id_vendor      Int
  Vendor         vendor?   @relation(fields: [id_vendor], references: [id])
  referensi      String?
  deadline_order DateTime?
  id_bahan       Int?
  Bahan          Bahan?    @relation(fields: [id_bahan], references: [id])
  jumlah_bahan   Int?
  total_biaya    Int?
  status         String? //RFQ, RFQ Send, Confirm, Receive, Purchase Order/Cancel,
}

model purchaseOrder {
  id                Int       @id @default(autoincrement())
  referensi_rfq     String?   @unique
  total_pembayaran  Int?
  confirmation_date DateTime?
  arrival_date      DateTime?
  status            String? //Nothing to bill, Waiting Bill, Fully Billed
}

model billPurchase {
  id               Int       @id @default(autoincrement())
  referensi_rfq    String?   @unique
  referensi_bill   String?   @unique
  accounting_date  DateTime?
  bill_date        DateTime?
  payment_date     DateTime?
  type_bill        String?
  total_pembayaran Int?
  status           String? //Draft, Posted, Not Paid, Paid
}

model customer {
  id                 Int      @id @default(autoincrement())
  company_registrasi String?
  nama_customer      String?
  type               String?
  alamat             String?
  no_telp            String?
  email              String?
  created_at         DateTime @default(now())
  updated_at         DateTime @default(now())
}